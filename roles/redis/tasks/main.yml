---
#
# Run a Redis server
# Used as a cache by several applications
# https://redis.io/
#
- name: Check if password has been loaded in Consul
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    return_content: true
    unix_socket: /var/opt/nomad/run/consul.sock
    use_netrc: false
    use_proxy: false
    validate_certs: false
    headers:
      X-Consul-Token: "{{ ansible_facts['consul_token'] }}"
    method: GET
    url: http://localhost/v1/kv/redis/password
    status_code:
    - 200
    - 404
  register: redis_password

- name: Generate and store password in Consul
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    return_content: true
    unix_socket: /var/opt/nomad/run/consul.sock
    use_netrc: false
    use_proxy: false
    validate_certs: false
    body: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=128) }}"
    headers:
      X-Consul-Token: "{{ ansible_facts['consul_token'] }}"
    method: PUT
    url: http://localhost/v1/kv/redis/password
  changed_when: true
  when: redis_password.status == 404

- name: Generate job submission JSON
  ansible.builtin.command:
    argv:
    - nomad
    - job
    - run
    - -no-color
    - -output
    - -var
    - region={{ region }}
    - -var
    - datacenter={{ datacenter }}
    - "-"
    stdin: "{{ lookup('ansible.builtin.file', './redis.nomad') }}"
  register: nomad_job_json
  changed_when: false

- name: Submit job to Nomad
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    use_netrc: false
    use_proxy: false
    validate_certs: false
    return_content: true
    headers:
      X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
    body: "{{ nomad_job_json.stdout }}"
    body_format: json
    method: POST
    url: http://127.0.0.1:4646/v1/jobs
  register: job_register_output

- name: List allocations for evaluation
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    use_netrc: false
    use_proxy: false
    validate_certs: false
    return_content: true
    headers:
      X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
    method: GET
    url: http://127.0.0.1:4646/v1/evaluation/{{ job_register_output.json.EvalID }}/allocations
  register: allocations_output

- name: Wait for container to start
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    use_netrc: false
    use_proxy: false
    validate_certs: false
    return_content: true
    headers:
      X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
    method: GET
    url: http://127.0.0.1:4646/v1/allocation/{{ allocations_output.json[0].ID }}
  register: allocation_output
  until: allocation_output.json.TaskStates.redis.State == "running"
  retries: 5
  delay: 2
  when: (allocations_output.json | length) > 0

- name: Wait for health checks in Consul to be passing
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    return_content: true
    unix_socket: /var/opt/nomad/run/consul.sock
    use_netrc: false
    use_proxy: false
    validate_certs: false
    headers:
      X-Consul-Token: "{{ ansible_facts['consul_token'] }}"
    method: GET
    url: http://localhost/v1/health/checks/redis
  register: service_status
  until: service_status.json[0].Status == "passing"
  retries: 5
  delay: 2
