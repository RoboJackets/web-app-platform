---
#
# Install Consul and bootstrap ACLs
# https://developer.hashicorp.com/consul/tutorials/day-0/access-control-setup
#
- name: Add HashiCorp repository
  ansible.builtin.yum_repository:
    name: hashicorp
    description: Hashicorp Stable - $basearch
    baseurl: https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable
    enabled: true
    gpgcheck: true
    gpgkey: https://rpm.releases.hashicorp.com/gpg
    state: present

- name: Install Consul
  ansible.builtin.yum:
    name:
    - consul
    state: present

- name: Read Consul user
  ansible.builtin.getent:
    database: passwd
    key: consul

- name: Read Consul configuration file
  ansible.builtin.slurp:
    src: /etc/consul.d/consul.hcl
  register: consul_hcl

- name: Set Consul token as fact
  ansible.builtin.set_fact:
    consul_token: "{{ consul_hcl['content'] | b64decode | regex_search('[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}') }}"
    cacheable: yes
  when: (consul_hcl['content'] | b64decode | regex_search('[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}')) != None

- name: Write Consul configuration file
  ansible.builtin.template:
    src: consul.hcl
    dest: /etc/consul.d/consul.hcl
    owner: consul
    group: consul
    mode: '0400'
    validate: consul validate -config-format=hcl %s
  register: consul_hcl_template

- name: Create /var/opt/nomad/run/
  ansible.builtin.file:
    path: /var/opt/nomad/run/
    state: directory
    mode: '0777'

- name: Bootstrap Consul
  when: "'consul_token' not in ansible_facts or ansible_facts['consul_token'] == None"
  block:

  - name: Start Consul service
    ansible.builtin.systemd_service:
      name: consul
      state: started
      enabled: false

  - name: Wait for Consul socket to be available
    ansible.builtin.wait_for:
      path: /var/opt/nomad/run/consul.sock
      state: present
      timeout: 10

  - name: Bootstrap Consul ACL
    ansible.builtin.uri:
      follow_redirects: none
      force: true
      method: PUT
      return_content: true
      unix_socket: /var/opt/nomad/run/consul.sock
      url: http://localhost/v1/acl/bootstrap
      use_netrc: false
      use_proxy: false
      validate_certs: false
    register: consul_bootstrap
    # the raft leader election may not have completed at this point so bootstrap may fail
    retries: 2
    delay: 5
    until: consul_bootstrap.status == 200

  - name: Write Consul configuration file with token
    ansible.builtin.template:
      src: consul.hcl
      dest: /etc/consul.d/consul.hcl
      owner: consul
      group: consul
      mode: '0400'
      validate: consul validate -config-format=hcl %s

- name: Stop Consul service
  ansible.builtin.systemd_service:
    name: consul
    state: stopped
    enabled: false
  when: "'consul_token' not in ansible_facts or ansible_facts['consul_token'] == None or consul_hcl_template.changed"

- name: Set Consul token as fact
  ansible.builtin.set_fact:
    consul_token: "{{ consul_bootstrap.json.SecretID }}"
    cacheable: yes
  when: "'consul_token' not in ansible_facts or ansible_facts['consul_token'] == None"

- name: Enable and start Consul service
  ansible.builtin.systemd_service:
    name: consul
    state: started
    enabled: true

- name: Wait for Consul socket to be available
  ansible.builtin.wait_for:
    path: /var/opt/nomad/run/consul.sock
    state: present
    timeout: 10

- name: Retrieve nodes from Consul to validate Consul is working
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    return_content: true
    unix_socket: /var/opt/nomad/run/consul.sock
    use_netrc: false
    use_proxy: false
    validate_certs: false
    headers:
      X-Consul-Token: "{{ ansible_facts['consul_token'] }}"
    method: GET
    url: http://localhost/v1/catalog/nodes
  register: consul_nodes
  failed_when: "consul_nodes.json.0.Node != node_name or consul_nodes.json.0.Datacenter != datacenter"

- name: Check if Consul token is stored in Consul
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    return_content: true
    unix_socket: /var/opt/nomad/run/consul.sock
    use_netrc: false
    use_proxy: false
    validate_certs: false
    headers:
      X-Consul-Token: "{{ ansible_facts['consul_token'] }}"
    method: GET
    url: http://localhost/v1/kv/consul/token
    status_code:
    - 200
    - 404
  register: consul_token_present

- name: Store Consul token in Consul
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    return_content: true
    unix_socket: /var/opt/nomad/run/consul.sock
    use_netrc: false
    use_proxy: false
    validate_certs: false
    body: "{{ ansible_facts['consul_token'] }}"
    headers:
      X-Consul-Token: "{{ ansible_facts['consul_token'] }}"
    method: PUT
    url: http://localhost/v1/kv/consul/token
  when: consul_token_present.status == 404
