---
#
# Manages the vouch job within Nomad
# https://github.com/vouch/vouch-proxy
#
- name: Check if Vouch configuration has been loaded in Consul
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    return_content: true
    unix_socket: /var/opt/nomad/run/consul.sock
    use_netrc: false
    use_proxy: false
    validate_certs: false
    headers:
      X-Consul-Token: "{{ ansible_facts['consul_token'] }}"
    method: GET
    url: http://localhost/v1/kv/vouch
    status_code:
    - 200
  register: vouch_config
  ignore_errors: true

- name: Check for required keys in configuration
  ansible.builtin.fail:
    msg: Vouch configuration has been loaded in Consul but is missing some required parameters. Check to make sure VOUCH_DOMAINS, OAUTH_PROVIDER, OAUTH_CLIENT_ID, OAUTH_CLIENT_SECRET, and OAUTH_CALLBACK_URL are all present in the map.
  when: >-
    vouch_config.status == 200 and (
      ("VOUCH_DOMAINS" not in (vouch_config.json.0.Value | b64decode | from_json))
      or ("OAUTH_PROVIDER" not in (vouch_config.json.0.Value | b64decode | from_json))
      or ("OAUTH_CLIENT_ID" not in (vouch_config.json.0.Value | b64decode | from_json))
      or ("OAUTH_CLIENT_SECRET" not in (vouch_config.json.0.Value | b64decode | from_json))
      or ("OAUTH_CALLBACK_URL" not in (vouch_config.json.0.Value | b64decode | from_json))
    )

- name: Run Vouch job
  when: vouch_config.status == 200
  block:

  - name: Generate job submission JSON
    ansible.builtin.command:
      argv:
      - nomad
      - job
      - run
      - -no-color
      - -output
      - -var
      - region={{ region }}
      - -var
      - datacenter={{ datacenter }}
      - "-"
      stdin: "{{ lookup('ansible.builtin.file', './vouch.nomad') }}"
    register: nomad_job_json
    changed_when: false

  - name: Submit job to Nomad
    ansible.builtin.uri:
      follow_redirects: none
      force: true
      use_netrc: false
      use_proxy: false
      validate_certs: false
      return_content: true
      headers:
        X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
      body: "{{ nomad_job_json.stdout }}"
      body_format: json
      method: POST
      url: http://127.0.0.1:4646/v1/jobs
    register: job_register_output

  - name: List allocations for evaluation
    ansible.builtin.uri:
      follow_redirects: none
      force: true
      use_netrc: false
      use_proxy: false
      validate_certs: false
      return_content: true
      headers:
        X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
      method: GET
      url: http://127.0.0.1:4646/v1/evaluation/{{ job_register_output.json.EvalID }}/allocations
    register: allocations_output

  - name: Wait for container to start
    ansible.builtin.uri:
      follow_redirects: none
      force: true
      use_netrc: false
      use_proxy: false
      validate_certs: false
      return_content: true
      headers:
        X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
      method: GET
      url: http://127.0.0.1:4646/v1/allocation/{{ allocations_output.json[0].ID }}
    register: allocation_output
    until: allocation_output.json.TaskStates.vouch.State == "running"
    retries: 10
    delay: 2
    when: (allocations_output.json | length) > 0

  - name: Wait for health check in Consul to be passing
    ansible.builtin.uri:
      follow_redirects: none
      force: true
      return_content: true
      unix_socket: /var/opt/nomad/run/consul.sock
      use_netrc: false
      use_proxy: false
      validate_certs: false
      headers:
        X-Consul-Token: "{{ ansible_facts['consul_token'] }}"
      method: GET
      url: http://localhost/v1/health/checks/vouch
    register: service_status
    until: service_status.json[0].Status == "passing"
    retries: 5
    delay: 2
