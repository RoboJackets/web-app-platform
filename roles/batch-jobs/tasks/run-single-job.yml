---
#
# Run a single batch job, for use in a loop
#
- name: Generate job JSON - {{ item | basename }}
  ansible.builtin.command:
    argv:
    - nomad
    - job
    - run
    - -no-color
    - -output
    - -var
    - region={{ region }}
    - -var
    - datacenter={{ datacenter }}
    - "-"
    stdin: "{{ lookup('ansible.builtin.file', item) }}"
  register: nomad_job_json
  changed_when: false

- name: Submit job to Nomad - {{ item | basename }}
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    use_netrc: false
    use_proxy: false
    validate_certs: false
    return_content: true
    headers:
      X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
    body: "{{ nomad_job_json.stdout }}"
    body_format: json
    method: POST
    url: http://127.0.0.1:4646/v1/jobs

- name: Force launch the job - {{ item | basename }}
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    use_netrc: false
    use_proxy: false
    validate_certs: false
    return_content: true
    headers:
      X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
    method: POST
    url: http://127.0.0.1:4646/v1/job/{{ (nomad_job_json.stdout | from_json).Job.ID }}/periodic/force
  register: force_launch_output

- name: List allocations for evaluation - {{ item | basename }}
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    use_netrc: false
    use_proxy: false
    validate_certs: false
    return_content: true
    headers:
      X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
    method: GET
    url: http://127.0.0.1:4646/v1/evaluation/{{ force_launch_output.json.EvalID }}/allocations
  register: evaluation_output

- name: Wait for allocation to complete - {{ item | basename }}
  ansible.builtin.uri:
    follow_redirects: none
    force: true
    use_netrc: false
    use_proxy: false
    validate_certs: false
    return_content: true
    headers:
      X-Nomad-Token: "{{ ansible_facts['nomad_token'] }}"
    method: GET
    url: http://127.0.0.1:4646/v1/allocation/{{ evaluation_output.json[0].ID }}
  register: allocation_output
  until: allocation_output.json.ClientStatus == "complete"
  retries: 5
  delay: 2
